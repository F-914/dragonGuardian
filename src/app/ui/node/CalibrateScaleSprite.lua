---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Asus.
--- DateTime: 2022/6/23 9:59
---
--[[--
    刻度尺的精灵
    CalibrateScaleSprite.lua
]]

local CalibrateScaleSprite = class("CalibrateScaleSprite", function(res)
    return display.newSprite(res)
end)

-- local
local StringDef = require("app.def.StringDef")
local GameData = require("app.test.GameData")
local Log = require("app.utils.Log")
--

--[[--
    @description: 构造方法
    @param res type: string 纹理
    @param userKeyQuantity: number ,用户当前的要是数量
    @return none
]]
function CalibrateScaleSprite:ctor(res, userKeyQuantity)
    self.currentKey_ = userKeyQuantity --记录当前钥匙数量，用于帧刷新和创建进度条
    Log.i("userKeyQuantity is nil ? " .. tostring(userKeyQuantity == nil))
    self.yellowScale_ = nil --用于帧刷新
    self.size_ = nil --用于帧刷新
    self:init()
end

--[[--
    @description:初始化，构造纹理
    @param none
    @return none
]]
function CalibrateScaleSprite:init()

    local size = self:getContentSize()

    self.size_ = size
    self:setScale(1.93, 1)

    local yellowScale = display.newSprite("res/home/battle/high_ladder/calibrated scale/cutoff/cutoff.png")
    yellowScale:setAnchorPoint(0, 0)
    yellowScale:setPosition(3, 6)
    local factor = self.currentKey_ / GameData.maxKeyQuantity_
    --这个放缩值谨慎修改
    local scale = 3.134 * factor - 0.19
    yellowScale:setScale(scale, 1)
    yellowScale:addTo(self)

    --该地方有瑕疵，留待后续修改
    --local spriteDecorate = display.newSprite("res/home/battle/high_ladder/calibrated scale/rectangle.png")
    --spriteDecorate:setAnchorPoint(0, 0)
    --spriteDecorate:setPosition(0, 0)
    ----spriteDecorate:setScale(scale * 0.045, 1)
    --spriteDecorate:setContentSize(self.size_.width * factor, self.height)
    --spriteDecorate:addTo(yellowScale)

    self.yellowScale_ = yellowScale
    local keyRewardNodes = GameData.keyRewardNodes_
    for i = 1, #keyRewardNodes do
        local num = keyRewardNodes[i]
        local factor2 = num / GameData.maxKeyQuantity_
        local quantityTTF = display.newTTFLabel({
            text = tostring(num),
            font = "res/font/fzbiaozjw.ttf",
            size = 18,
            color = cc.c3b(168, 176, 225)
        })
        local scale = factor2 * 3.13 - 0.19
        quantityTTF:setPosition(scale * 210, -10)
        quantityTTF:setScale(0.3, 0.8)
        quantityTTF:addTo(self)

        local cutoffScale = nil
        if num < GameData.userKeyQuantity_ then
            cutoffScale = display.newSprite("res/home/battle/high_ladder/calibrated scale/cutoff/cutoff_scale.png")
        else
            cutoffScale = display.newSprite("res/home/battle/high_ladder/calibrated scale/scale.png")
        end

        cutoffScale:setScale(0.5, 1)
        cutoffScale:setPosition(scale * 210, 13)
        cutoffScale:addTo(self)
    end


end

--[[--
    @description: 帧刷新
    @param dt type:number 帧间隔
    @return none
]]
function CalibrateScaleSprite:update(dt)
    --监听到用户的钥匙数量发生变化
    if not self.currentKey_ == GameData.userKeyQuantity then
        self.currentKey_ = GameData.userKeyQuantity
        local factor = self.currentKey_ / GameData.maxKeyQuantity_
        local scale = 3.13 * factor - 0.19
        self.yellowScale_:setScale(scale, 1)
    end
end

return CalibrateScaleSprite
