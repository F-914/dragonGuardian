---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Asus.
--- DateTime: 2022/6/22 16:05
---
--[[--
    表示奖品的精灵
    RewardSprite.lua
]]
local RewardSprite = class("RewardSprite", function(res)
    return display.newSprite(res)
end)
--local
local CreateSpriteUtil = require("src/app/test/CreateSpriteUtil.lua")
--

--[[--
    @description: 构造方法
    @param res type:string, 精灵纹理
    @param data type:table, 精灵对应的数据
    @return none
]]
function RewardSprite:ctor(res, data)
    self.data_ = data --type: table, 精灵对应的数据
    --self.button_ = nil
    self.size_ = self:getContentSize() --type: table, 当前精灵的大小，用于计算和帧刷新
    local button = CreateSpriteUtil:createRewardButton(self.data_.name)

    local lockSp = CreateSpriteUtil:getBorderStateSprite(self.data_.isUnlock, self.data_.isGet)
    if lockSp then
        lockSp:setPosition(self.size_.width * .5, 3)
        --lockSp:setName("lockSp")
        lockSp:addTo(self)
    end

    button:addTouchEventListener(function(sender, eventType)
        --[[--
            执行注册的方法
            参数为rewardData
        ]]
        print("clicked reward button")
    end)

    local quantityTTF = nil
    if self.data_.quantity then
        quantityTTF = display.newTTFLabel({
            text = tostring(self.data_.quantity),
            font = "res/font/fzbiaozjw.ttf",
            size = 18,
            color = cc.c3b(168, 176, 225)
        })
    end
    if quantityTTF then
        button:setPosition(self.size_.width * .5, self.size_.height * .5 + 5)
        quantityTTF:setPosition(self.size_.width * .5, self.size_.height * .5 - 30)
        button:addTo(self)
        quantityTTF:addTo(self)
    else
        button:setPosition(self.size_.width * .5, self.size_.height * .5)
        button:addTo(self)
    end
    self.lockSp_ = lockSp --lockSp 用于帧刷新
    self:init()
end

--[[-
    @description: 进行解锁状态变化事件的注册，暂无
]]
function RewardSprite:init()
    --[[--
        注册方法块，暂无
    ]]
end

--[[--
    @description: 当奖励解锁时调用这个方法，更新纹理，该方法用于注册后调用
]]
function RewardSprite:unlocked()
    --去除锁纹理
    local lockSp = self.lockSp_
    lockSp:removeSelf()
    self.lockSp_ = nil

    --更新边框纹理
    local texture = CCTextureCache:sharedTextureCache():addImage("res/home/battle/high_ladder/unlocked_unreceived_yellow_border.png")
    self:setTexture(texture)
end

--[[--
    @description: 当奖励被领取时，调用这个方法，更新视图，该方法用于注册
]]
function RewardSprite:get()
    --加上领取标志
    local lockSp = CreateSpriteUtil:getBorderStateSprite(true, true)
    lockSp:setPosition(self.size_.width * .5, 0)
    lockSp:addTo(self)

    --更改纹理
    local texture = CCTextureCache:sharedTextureCache():addImage("res/home/battle/high_ladder/can_receive.png")
    self:setTexture(texture)
end

--[[--
    @description: 帧刷新，暂无
    @param dt type: number, 帧间隔
    @return none
]]
function RewardSprite:update(dt)
    --if self.data_.isUnlock == true then
    --    if self.data_.isGet == true then
    --        local lockSp = CreateSpriteUtil:getBorderStateSprite(true, true)
    --        lockSp:setPosition(self.size_.width * .5, 0)
    --        lockSp:setName("lockSp")
    --        lockSp:addTo(self)
    --    else
    --        local localSp =
    --    end
    --else
    --
    --end
end

return RewardSprite
