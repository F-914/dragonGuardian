---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Asus.
--- DateTime: 2022/6/21 10:12
---
--[[--
    主界面中战斗部分
    UserBattleLayer
]]
local UserBattleLayer = class("UserBattleLayer", function()
    return display.newLayer()
end)
--local
local GameData = require("app.test.GameData")
local CreateSpriteUtil = require("app.test.CreateSpriteUtil")
local StringDef = require("app.def.StringDef")
--

--[[--
    @description: 构造方法
]]
function UserBattleLayer:ctor()
    self.teamMap_ = {} --type:Map key = towerData, value = towerSprite

    self:init()
end

--[[--
    @description: 初始化方法
]]
function UserBattleLayer:init()
    local teamData = GameData.currentTeam_
    self.teamMap_ = CreateSpriteUtil:createTeamSprite(teamData)

    local teamLayer = display.newLayer()
    teamLayer:setContentSize(display.width, display.height * .17)
    teamLayer:setAnchorPoint(.5, .5)
    teamLayer:setPosition(display.width * .5, display.height * .23)
    teamLayer:addTo(self)

    local selectTeamSprite = display.newSprite(StringDef.PATH_BASE_SELECTED_TEAM)
    selectTeamSprite:setPosition(display.width * .5, display.height * .08)
    selectTeamSprite:addTo(teamLayer)

    local count = 1
    for _, node in pairs(self.teamMap_) do
        node:setPosition(-60 + display.width * 0.2 * count, display.height * .2 - 120)
        node:setScale(0.8)
        teamLayer:addChild(node)
        count = count + 1
    end

    local battleButton = ccui.Button:create(StringDef.PATH_BUTTON_BATTLE)
    battleButton:setPosition(display.width * .5, display.height * .5)
    battleButton:addTo(self)
    battleButton:setScale(0.65)
    battleButton:addTouchEventListener(function(sender, eventType)
        print("clicked battle button")
        --[[--
            this block will use to pop two-level ui
        ]]
    end)

end

--[[--
    @description: 执行事件的注册
]]
function UserBattleLayer:onEnter()

end

--[[--
    @description: 执行事件的注销
]]
function UserBattleLayer:onExit()

end

--[[--
    @description: 帧刷新
    @param dt type: number, 帧间隔
    @return none
]]
function UserBattleLayer:update(dt)
    for _, node in pairs(self.teamMap_) do
        node:update(dt)
    end
end

return UserBattleLayer
